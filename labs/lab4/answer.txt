1.	task:
		Identifier must be from 1 to 128 chars.
		Identifier must starts from letter or digit
		Identifier should contains english letter, _, - digits

	equivalence classes: 
		identifier_length ::= [1..128], 
		identifier ::= <first_ch><avaliable_chs>|<first_ch>
		first_ch ::= <[a-zA-Z]>|<_>
		chars ::= <chars><char>|<char>
		char ::= <first_ch>|<->|<digit>
		digit ::= <[\d]>
		
	test cases:
		1. identifier_length ::= { 
			invalid : { 0, 129 }, 
			valid : { 1, 20, 128 }
		}
		
		2. first_ch ::= {
			invalid : { [^a-zA-Z], ^_ }, 
			valid : { a, A, z, Z, _ }
		}
		
		3. char ::= <first_ch> && {
			invalid : { ^\d, ^- }
			valid : { \d, - }
		}
		
		valid: a-12-
		valid: a
		valid: {a(128)}
		invalid: ф
		invalid: -
		invalid: 
		invalid:  {129}

2.	task:
		val basePercent = 15 
		val creditPercentBySum = 15 
		val creditSum: Int
		if (creditSum in 10.000..100.000) {
			creditPercentBySum = basePercent	
		} else if (creditSum from 100.001..500.000) {
			creditPercentBySum = basePercent - 1
		} else if (creditSum from 500.001..1.000.000) {
			creditPercentBySum = basePercent - 2
		} else if (creditSum >= 1.000.001) {
			creditPercentBySum = discuss
		}
		
		val creditTerm = user data
		val creditPercentByTerm = basePercent
		if (creditTerm < 3) {
			creditPercentByTerm = basePercent	
		} else if (3 <= creditTerm < 5) {
			creditPercentByTerm = basePercent + 1	
		} else if (5 <= creditTerm < 10) {
			creditPercentByTerm = basePercent + 2	
		} else if (10 <= creditTerm) {
			creditPercentByTerm = discuss
		}
	
	
	equivalence classes: 
		creditSum ::= { [10.000 .. 100.000], [100.001 .. 500.000], [500.001 .. 1.000.000], [1.000.001 .. +inf] }
		creditTerm ::= { [min .. 3), [3 .. 5), [5 .. 10), [10 .. +inf) }
				
	test cases:
		In file

	
3.	task:
		is year leap? (год Високосный, если год кратен 400 ИЛИ
  			кратен 4 но не кратен 100)
		if (year % 4 == 0) {
			if (year % 100 == 0) {	
				if (year % 400 == 0) {
					leap = true;
				} else {
	          			leap = false;
	          		}
	      	} else {
	        		leap = true;
	        	}
	      } else {
	      	leap = false; 
	      }

		Day: [1-28] 
		Month: [2] 
		Year: [1-9999, if is not leap]
		
		
		Day: [1-29] 
		Month: [2] 
		Year: [if is leap]
  			
		Day: [1-30] 
		Month: [4, 6, 9, 11] 
		Year: [1-9999]
		
		Day: [1-31] 
		Month: [1, 3, 5, 7, 8, 10, 12] 
		Year: [1-9999]
		
		
	test cases:
		"N/A": not int symbol
		"Valid": {
			"cases": [
				01.02.2021,
				08.09.1380
			],
			"Day": {
				[1, 11, 28],
				[29, 31 if month != 2]
			},
			"Month": [1, 3, 12],
			"Year": [1, 1380, 2021],
		}
		"Invalid": [
			29.02.2021,
			00.00.0000,
			N/A.N/A.N/A,
			-1.-1.1111
		]
				
	
	